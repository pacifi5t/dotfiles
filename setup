#!/usr/bin/python3

import os
from sys import platform

home = os.environ["HOME"]
common_dir = os.path.abspath("common")
linux_dir = os.path.abspath("linux")
macos_dir = os.path.abspath("macos")


def create_symlink(src: str, dst: str):
    try:
        os.remove(dst)
    except FileNotFoundError:
        pass
    os.symlink(src, dst)
    print(f"{dst}{' ' * 4}->{' ' * 4}{src}")


def link_files_from(directory: str):
    excluded_files = [".localenv", ".localrc"]
    contents = os.listdir(directory)

    for c in contents:
        if os.path.basename(c) in excluded_files:
            continue

        abspath = os.path.join(directory, c)

        if os.path.isfile(abspath):
            create_symlink(abspath, os.path.join(home, c))
            continue

        for root, _, files in os.walk(abspath):
            for file in files:
                abspath = os.path.join(root, file)
                symlink_path = os.path.join(home, os.path.relpath(abspath, directory))
                os.makedirs(os.path.dirname(symlink_path), exist_ok=True)
                create_symlink(abspath, symlink_path)


def create_localfile(filename: str):
    localenv_file = os.path.abspath(f"common/{filename}")
    if not os.path.exists(localenv_file):
        os.system(f"touch {localenv_file}")


os.system("rm -f ~/.bash*")

link_files_from(common_dir)
if platform == "linux":
    link_files_from(linux_dir)
elif platform == "darwin":
    link_files_from(macos_dir)

create_localfile(".localenv")
create_localfile(".localrc")
